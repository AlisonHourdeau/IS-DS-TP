mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
x_i0 <- sample(c(0,8), 1)
x_j0 <- sample(c(0,8), 1)
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) && (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
print(possibilites_string)
print(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
x_i0 <- sample(c(0,8), 1)
x_j0 <- sample(c(0,8), 1)
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) && (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
print(fleches[xi,xj])
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
print(possibilites_string)
print(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
plateau<-matrix(0, ncol=8, nrow=8)
# on remplit la matrice par le nombre de déplacements possibles
plateau[3:6,3:6]=8
plateau[1,3:6]=4
plateau[8,3:6]=4
plateau[3:6,1]=4
plateau[3:6,8]=4
plateau[1,1]=2
plateau[1,8]=2
plateau[8,1]=2
plateau[8,8]=2
plateau[2,3:6]=6
plateau[7,3:6]=6
plateau[3:6,7]=6
plateau[3:6,2]=6
plateau[1,2]=3
plateau[2,1]=3
plateau[1,7]=3
plateau[2,8]=3
plateau[7,8]=3
plateau[8,7]=3
plateau[8,2]=3
plateau[7,1]=3
plateau[2,2]=4
plateau[2,7]=4
plateau[7,7]=4
plateau[7,2]=4
plateau
fleches <- matrix(c(0,0,0,0,0,0,0,0), ncol=8, nrow=8)
fleches
# on remplit la matrice par les déplacements possiles
fleches[3:6,3:6]="1,2,3,4,5,6,7,8"
#les coins
fleches[1,1]="3,4"
fleches[1,8]="5,6"
fleches[8,1]="1,2"
fleches[8,8]="7,8"
#Les 3
fleches[1,2]="3,4,5"
fleches[2,1]="2,3,4"
fleches[1,7]="4,5,6"
fleches[2,8]="5,6,7"
fleches[7,8]="6,7,8"
fleches[8,7]="7,8,1"
fleches[8,2]="8,1,2"
fleches[7,1]="1,2,3"
#Les 4
fleches[1,3:6]="3,4,5,6"
fleches[8,3:6]="7,8,1,2"
fleches[3:6,1]="1,2,3,4"
fleches[3:6,8]="5,6,7,8"
fleches[2,2]="2,3,4,5"
fleches[2,7]="4,5,6,7"
fleches[7,7]="6,7,8,1"
fleches[7,2]="8,1,2,3"
#Les 6
fleches[2,3:6]="2,3,4,5,6,7"
fleches[7,3:6]="1,2,3,6,7,8"
fleches[3:6,7]="1,4,5,6,7,8"
fleches[3:6,2]="1,2,3,4,5,8"
bouger <- function(xi, xj, num_mouvement) {
if(num_mouvement == 1) {
xi = xi - 2
xj = xj + 1
}
else if(num_mouvement == 2) {
xi = xi - 1
xj = xj + 2
}
else if(num_mouvement == 3) {
xi = xi + 1
xj = xj + 2
}
else if(num_mouvement == 4) {
xi = xi + 2
xj = xj + 1
}
else if(num_mouvement == 5) {
xi = xi + 2
xj = xj - 1
}
else if(num_mouvement == 6) {
xi = xi + 1
xj = xj - 2
}
else if(num_mouvement == 7) {
xi = xi - 1
xj = xj - 2
}
else if(num_mouvement == 8) {
xi = xi - 2
xj = xj - 1
}
return( c(xi,xj))
}
x_i0 <- sample(c(0,8), 1)
x_j0 <- sample(c(0,8), 1)
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) && (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
print(fleches[xi,xj])
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
print(possibilites_string)
print(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
View(fleches)
x_i0 <- sample(c(1,8), 1)
x_j0 <- sample(c(1,8), 1)
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) && (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
print(fleches[xi,xj])
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
print(possibilites_string)
print(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
paste("Arrivee = " ,xi , ",",xj," en n = ",n)
x_i0 <- sample(c(1,8), 1)
x_j0 <- sample(c(1,8), 1)
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) && (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
print(fleches[xi,xj])
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
paste("Arrivee = " ,xi , ",",xj," en n = ",n)
x_i0 <- sample(c(1,8), 1)
x_j0 <- sample(c(1,8), 1)
fleches[1,1]
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) && (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
print(fleches[xi,xj])
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
paste("Arrivee = " ,xi , ",",xj," en n = ",n)
x_i0 <- sample(c(1,8), 1)
x_j0 <- sample(c(1,8), 1)
xi <- x_i0
xj <- x_j0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu au coin d'origine
while(n == 0 || ( (x_i0 != xi ) || (x_j0 != xj))) {
possibilites_string <- fleches[xi,xj]
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
#paste("n = ", n," . ",xi, xj)
n <- n+1
}
paste("Arrivee = " ,xi , ",",xj," en n = ",n)
print(range(2))
for(i in range(2)) {
print(i)
}
for(i in range(0:2)) {
print(i)
}
for(i in range(0,2)) {
print(i)
}
for(i in (0:2)) {
print(i)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
temps_retour <- function(xi_0, xj_0) {
xi <- xi_0
xj <- xj_0
paste("Depart = ", xi, ",",xj)
n=0
# Tq pas revenu à la case d'origine
while(n == 0 || ( (xi_0 != xi ) || (xj_0 != xj))) {
possibilites_string <- fleches[xi,xj]
possibilites_vect <- strsplit(possibilites_string, ",")
possibilites_vect <- unlist(possibilites_vect)
possibilites_vect <- as.numeric(possibilites_vect)
num_mouvement <- sample(possibilites_vect, 1)
mouv <- bouger(xi, xj, num_mouvement)
mouv <- bouger(xi, xj, num_mouvement)
xi <- mouv[1]
xj <- mouv[2]
n <- n+1
}
paste("Arrivee = " ,xi , ",",xj," en n = ",n)
return(n)
}
simutation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in range(0:N-1)) {
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simutation(1000, xi_0, xj_0)
simulation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in range(0:N-1)) {
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
simulation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in range(1:N)) {
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
simulation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in range(1:N)) {
print(i)
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
simulation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in range(1,N)) {
print(i)
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
simulation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in (1:N)) {
print(i)
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
simulation <- function(N, xi_0, xj_0) {
sum <- 0
for(i in (1:N)) {
sum <- sum + temps_retour(xi_0, xj_0)
}
return(sum/N)
}
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(100, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
xi_0 <- sample(c(1,8), 1)
xj_0 <- sample(c(1,8), 1)
simulation(1000, xi_0, xj_0)
somme(plateau)
sum(plateau)
setwd("~/5A/MATD-SW/TP3")
install.packages("forecast")
library(forecast)
forecast::auto.arima(Xt)
Xt <- read.table("serie1.txt", header = F)
Xt
plot.ts(Xt)
acf(Xt)
pacf(Xt)
library(forecast)
forecast::auto.arima(Xt)
library(forecast)
forecast::auto.arima(Xt)
acf(Xt1)
Xt1 <- read.table("serie1.txt", header = F)
Xt1
plot.ts(Xt1)
acf(Xt1)
pacf(Xt1)
library(forecast)
forecast::auto.arima(Xt1)
Xt2 <- read.table("serie2.txt", header = F)
Xt2
plot.ts(Xt1)
acf(Xt1)
pacf(Xt1)
plot.ts(Xt2)
acf(Xt2)
pacf(Xt2)
plot.ts(Xt2)
acf(Xt2)
pacf(Xt2)
forecast::auto.arima(Xt1)
forecast::auto.arima(Xt2)
forecast::auto.arima(Xt2)
library(forecast)
forecast::auto.arma(Xt1)
library(forecast)
forecast::auto.arma(Xt1)
library(forecast)
forecast::auto.arima(Xt1)
Xt3 <- read.table("serie3.txt", header = F)
plot.ts(Xt3)
acf(Xt3)
pacf(Xt3)
forecast::auto.arima(Xt3)
Xt4 <- read.table("serie4.txt", header = F)
plot.ts(Xt4)
acf(Xt4)
pacf(Xt4)
forecast::auto.arima(Xt4)
Xt5 <- read.table("serie5.txt", header = F)
plot.ts(Xt5)
acf(Xt5)
pacf(Xt5)
forecast::auto.arima(Xt5)
Xt6 <- read.table("serie6.txt", header = F)
plot.ts(Xt6)
acf(Xt6)
pacf(Xt6)
forecast::auto.arima(Xt6)
forecast::auto.arima(Xt5)
